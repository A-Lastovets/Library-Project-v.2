import asyncio
import logging
from datetime import datetime, timedelta

from sqlalchemy.future import select
from sqlalchemy.orm import joinedload

from app.dependencies.database import SessionLocal
from app.models.book import BookStatus
from app.models.reservation import Reservation, ReservationStatus
from app.schemas.schemas import BookResponse
from app.services.celery import celery_app
from app.services.email_service import send_email

logger = logging.getLogger(__name__)


@celery_app.task(bind=True, max_retries=3)
def send_password_reset_email(self, email: str, reset_link: str):
    """–ù–∞–¥—Å–∏–ª–∞—î –ª–∏—Å—Ç –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è."""
    subject = "üîë –ó–∞–ø–∏—Ç –Ω–∞ —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">üîë –°–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è</h2>
            <p>–í—ñ—Ç–∞—î–º–æ!</p>
            <p>–í–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –∑–∞–ø–∏—Ç –Ω–∞ —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∏–∂—á–µ, —â–æ–± –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å:</p>
            <p>
                <a href="{reset_link}" style="font-size: 16px; color: #007bff; text-decoration: none;">
                    üîó –°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å
                </a>
            </p>
            <p>–Ø–∫—â–æ –≤–∏ –Ω–µ –Ω–∞–¥—Å–∏–ª–∞–ª–∏ —Ü–µ–π –∑–∞–ø–∏—Ç, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—ñ–≥–Ω–æ—Ä—É–π—Ç–µ —Ü–µ–π –ª–∏—Å—Ç.</p>
            <br>
            <p>–ó –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è–º–∏, <br>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</p>
        </body>
    </html>
    """
    try:
        loop = asyncio.get_event_loop()
        if loop.is_running():
            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ create_task, —è–∫—â–æ Celery –≤–∂–µ –ø—Ä–∞—Ü—é—î –≤ event loop
            loop.create_task(send_email(email, subject, body, html=True))
        else:
            # –Ø–∫—â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ event loop, –∑–∞–ø—É—Å–∫–∞—î–º–æ –Ω–æ–≤–∏–π
            asyncio.run(send_email(email, subject, body, html=True))

        logger.info(f"Password reset email sent to {email}")
    except Exception as e:
        logger.error(f"Error sending password reset email to {email}: {e}")
        raise self.retry(exc=e, countdown=10)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫


@celery_app.task
def send_reservation_email(email: str, book: dict, expires_at: str):
    """–õ–∏—Å—Ç –ø—ñ—Å–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"""
    subject = "–í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">–ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è!</h2>
            <p>–î—è–∫—É—î–º–æ –∑–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞—à–æ—é –±—ñ–±–ª—ñ–æ—Ç–µ–∫–æ—é. –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –ø—Ä–∏–π–Ω—è—Ç–æ —ñ –Ω–∞—Ä–∞–∑—ñ –æ—á—ñ–∫—É—î –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</p>
            <hr>
            <h3>{book["title"]}</h3>
            <p><strong>–ê–≤—Ç–æ—Ä:</strong> {book["author"]}</p>
            <p><strong>–ñ–∞–Ω—Ä:</strong> {book["category"]}</p>
            <p><strong>–ú–æ–≤–∞:</strong> {book["language"]}</p>
            <p><strong>–†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è:</strong> {book["year"]}</p>
            <p><strong>–û–ø–∏—Å:</strong> {book["description"]}</p>
            <hr>
            <p><strong>–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –¥—ñ–π—Å–Ω–µ –¥–æ:</strong> {expires_at}</p>
            <p>–ë—É–¥—å –ª–∞—Å–∫–∞, –æ—á—ñ–∫—É–π—Ç–µ –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
            –Ø–∫ —Ç—ñ–ª—å–∫–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±—É–¥–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–µ, –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –ª–∏—Å—Ç —ñ–∑ –¥–µ—Ç–∞–ª—è–º–∏.</p>
            <br>
            <p>–ì–∞—Ä–Ω–æ–≥–æ –¥–Ω—è!<br>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body, html=True))


@celery_app.task
def send_reservation_confirmation_email(email: str, book: dict, expires_at: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"""
    subject = "–í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">–í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!</h2>
            <p>–î—è–∫—É—î–º–æ, —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—è –Ω–∞—à–æ—é –±—ñ–±–ª—ñ–æ—Ç–µ–∫–æ—é. –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–±—Ä–æ–Ω—é–≤–∞–ª–∏ –∫–Ω–∏–≥—É:</p>
            <hr>
            <h3>{book["title"]}</h3>
            <p><strong>–ê–≤—Ç–æ—Ä:</strong> {book["author"]}</p>
            <p><strong>–ñ–∞–Ω—Ä:</strong> {book["category"]}</p>
            <p><strong>–ú–æ–≤–∞:</strong> {book["language"]}</p>
            <p><strong>–†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è:</strong> {book["year"]}</p>
            <p><strong>–û–ø–∏—Å:</strong> {book["description"]}</p>
            <hr>
            <p><strong>–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –¥—ñ–π—Å–Ω–µ –¥–æ:</strong> {expires_at}</p>
            <p>–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–±–µ—Ä—ñ—Ç—å –∫–Ω–∏–≥—É –¥–æ —Ü—ñ—î—ó –¥–∞—Ç–∏. –Ø–∫—â–æ –≤–∏ –Ω–µ –≤—Å—Ç–∏–≥–Ω–µ—Ç–µ, –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.</p>
            <br>
            <p>–ì–∞—Ä–Ω–æ–≥–æ —á–∏—Ç–∞–Ω–Ω—è!<br>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body, html=True))


@celery_app.task
def send_reservation_cancelled_email(email: str, book_title: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è"""
    subject = "–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ"
    body = f"–í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ '{book_title}' –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ."

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body))


@celery_app.task
def send_book_checked_out_email(email: str, book_title: str, due_date: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ (–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ 14 –¥–Ω—ñ–≤)"""
    subject = "–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∫–Ω–∏–≥—É"
    body = f"–í–∏ –∑–∞–±—Ä–∞–ª–∏ –∫–Ω–∏–≥—É '{book_title}'. –¢–µ—Ä–º—ñ–Ω –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è ‚Äî {due_date}. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —ó—ó –≤—á–∞—Å–Ω–æ!"

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body))


@celery_app.task
def send_thank_you_email(user_email: str, book: dict):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏"""
    subject = "üìö –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">üìñ –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏!</h2>
            <p>–í–∞—à–∞ –∫–Ω–∏–≥–∞ —É—Å–ø—ñ—à–Ω–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–∞ –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏. –ú–∏ —Ü—ñ–Ω—É—î–º–æ –≤–∞—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å —ñ —Å–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è, —â–æ –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è –≤—ñ–¥ —á–∏—Ç–∞–Ω–Ω—è.</p>
            <hr>
            <h3>üìö {book["title"]}</h3>
            <p><strong>–ê–≤—Ç–æ—Ä:</strong> {book["author"]}</p>
            <p><strong>–ñ–∞–Ω—Ä:</strong> {book["category"]}</p>
            <p><strong>–ú–æ–≤–∞:</strong> {book["language"]}</p>
            <p><strong>–†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è:</strong> {book["year"]}</p>
            <p><strong>–û–ø–∏—Å:</strong> {book["description"]}</p>
            <hr>
            <p>‚ú® –ú–∏ –∑–∞–≤–∂–¥–∏ —Ä–∞–¥—ñ –±–∞—á–∏—Ç–∏ –≤–∞—Å —É –Ω–∞—à—ñ–π –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ!</p>
            <p>üìñ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–≥–ª—è–Ω—É—Ç–∏ –¥–æ –Ω–∞—Å –∑–∞ –Ω–æ–≤–∏–º–∏ –∫–Ω–∏–∂–∫–∞–º–∏.</p>
            <br>
            <p>üìö –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(user_email, subject, body, html=True))


@celery_app.task
def send_reservation_cancellation_email(user_email: str, book_title: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è"""
    subject = "–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ"
    body = f"–í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ '{book_title}' –±—É–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–∏ –Ω–µ –∑–∞–±—Ä–∞–ª–∏ —ó—ó –≤—á–∞—Å–Ω–æ."

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(user_email, subject, body))


@celery_app.task
def send_return_reminder_email(user_email: str, book_title: str, due_date: str):
    """üì© –õ–∏—Å—Ç-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞ 3 –¥–Ω—ñ –¥–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏"""
    subject = "–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏"
    body = f"–ù–∞–≥–∞–¥—É—î–º–æ, —â–æ —Ç–µ—Ä–º—ñ–Ω –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏ '{book_title}' –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è {due_date}. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å —ó—ó –≤—á–∞—Å–Ω–æ!"

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(user_email, subject, body))


@celery_app.task
def check_and_cancel_expired_reservations():
    """üìå –ü–µ—Ä–µ–≤—ñ—Ä—è—î –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è (–Ω–µ –∑–∞–±—Ä–∞–ª–∏ –∑–∞ 5 –¥–Ω—ñ–≤) —Ç–∞ —Å–∫–∞—Å–æ–≤—É—î —ó—Ö."""

    async def task():
        async with SessionLocal() as db:
            now = datetime.now()

            result = await db.execute(
                select(Reservation)
                .options(joinedload(Reservation.book), joinedload(Reservation.user))
                .where(
                    Reservation.expires_at < now,
                    Reservation.status == ReservationStatus.CONFIRMED,
                ),
            )
            expired_reservations = result.scalars().all()

            for reservation in expired_reservations:
                book = reservation.book
                user = reservation.user

                reservation.status = ReservationStatus.CANCELLED
                book.status = BookStatus.AVAILABLE

                # –ù–∞–¥—Å–∏–ª–∞—î–º–æ e-mail
                send_reservation_cancellation_email.delay(user.email, book.title)

            await db.commit()

    loop = asyncio.get_event_loop()
    loop.create_task(task())


@celery_app.task
def check_and_send_return_reminders():
    """üìå –ù–∞–¥—Å–∏–ª–∞—î –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞ 3 –¥–Ω—ñ –¥–æ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–æ—é."""

    async def task():
        async with SessionLocal() as db:
            now = datetime.now()
            reminder_date = now + timedelta(days=3)

            result = await db.execute(
                select(Reservation)
                .options(joinedload(Reservation.book), joinedload(Reservation.user))
                .where(
                    Reservation.expires_at == reminder_date,
                    Reservation.status == ReservationStatus.CONFIRMED,
                ),
            )
            reservations = result.scalars().all()

            for reservation in reservations:
                book = reservation.book
                user = reservation.user

                send_return_reminder_email.delay(
                    user.email,
                    book.title,
                    reservation.expires_at.strftime("%Y-%m-%d"),
                )

            await db.commit()

    loop = asyncio.get_event_loop()
    loop.create_task(task())
