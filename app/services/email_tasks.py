import asyncio
import logging
from datetime import datetime, timedelta
from typing import List

from asgiref.sync import async_to_sync
from sqlalchemy.engine import Result
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from sqlalchemy.orm import joinedload

from app.dependencies.database import SessionLocal
from app.models.book import BookStatus
from app.models.reservation import Reservation, ReservationStatus
from app.models.user import User
from app.services.celery_config import celery_app
from app.services.email_service import send_email

logger = logging.getLogger(__name__)


@celery_app.task(bind=True, max_retries=3)
def send_password_reset_email(self, email: str, reset_link: str):
    """–ù–∞–¥—Å–∏–ª–∞—î –ª–∏—Å—Ç –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è."""
    subject = "üîë –ó–∞–ø–∏—Ç –Ω–∞ —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">üîë –°–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è</h2>
            <p>–í—ñ—Ç–∞—î–º–æ!</p>
            <p>–í–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –∑–∞–ø–∏—Ç –Ω–∞ —Å–∫–∏–¥–∞–Ω–Ω—è –ø–∞—Ä–æ–ª—è. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∏–∂—á–µ, —â–æ–± –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å:</p>
            <p>
                <a href="{reset_link}" style="font-size: 16px; color: #007bff; text-decoration: none;">
                    üîó –°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å
                </a>
            </p>
            <p>–Ø–∫—â–æ –≤–∏ –Ω–µ –Ω–∞–¥—Å–∏–ª–∞–ª–∏ —Ü–µ–π –∑–∞–ø–∏—Ç, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ—ñ–≥–Ω–æ—Ä—É–π—Ç–µ —Ü–µ–π –ª–∏—Å—Ç.</p>
            <br>
            <p>–ó –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è–º–∏, <br>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</p>
        </body>
    </html>
    """
    try:
        loop = asyncio.get_event_loop()
        if loop.is_running():
            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ create_task, —è–∫—â–æ Celery –≤–∂–µ –ø—Ä–∞—Ü—é—î –≤ event loop
            loop.create_task(send_email(email, subject, body, html=True))
        else:
            # –Ø–∫—â–æ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ event loop, –∑–∞–ø—É—Å–∫–∞—î–º–æ –Ω–æ–≤–∏–π
            asyncio.run(send_email(email, subject, body, html=True))

        logger.info(f"Password reset email sent to {email}")
    except Exception as e:
        logger.error(f"Error sending password reset email to {email}: {e}")
        raise self.retry(exc=e, countdown=10)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫


@celery_app.task
def send_reservation_email(email: str, book: dict, expires_at: str):
    """–õ–∏—Å—Ç –ø—ñ—Å–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"""
    subject = "‚úÖ –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">–ú–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è!</h2>
            <p>–î—è–∫—É—î–º–æ –∑–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞—à–æ—é –±—ñ–±–ª—ñ–æ—Ç–µ–∫–æ—é. –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –ø—Ä–∏–π–Ω—è—Ç–æ —ñ –Ω–∞—Ä–∞–∑—ñ –æ—á—ñ–∫—É—î –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</p>
            <hr>
            <h3>üìö {book["title"]}</h3>
            <p><strong>‚úçÔ∏è –ê–≤—Ç–æ—Ä:</strong> {book["author"]}</p>
            <p><strong>üìñ –ñ–∞–Ω—Ä:</strong> {book["category"]}</p>
            <p><strong>üåç –ú–æ–≤–∞:</strong> {book["language"]}</p>
            <p><strong>üìÖ –†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è:</strong> {book["year"]}</p>
            <p><strong>üìù –û–ø–∏—Å:</strong> {book["description"]}</p>
            <hr>
            <p>–ë—É–¥—å –ª–∞—Å–∫–∞, –æ—á—ñ–∫—É–π—Ç–µ –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.
            –Ø–∫ —Ç—ñ–ª—å–∫–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±—É–¥–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–µ, –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –ª–∏—Å—Ç —ñ–∑ –¥–µ—Ç–∞–ª—è–º–∏.</p>
            <br>
            <p>üìö –ì–∞—Ä–Ω–æ–≥–æ –¥–Ω—è!<br>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body, html=True))


@celery_app.task
def send_reservation_confirmation_email(email: str, book: dict, expires_at: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º"""
    subject = "‚úÖ –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">–í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!</h2>
            <p>–î—è–∫—É—î–º–æ, —â–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–ª–∏—Å—è –Ω–∞—à–æ—é –±—ñ–±–ª—ñ–æ—Ç–µ–∫–æ—é. –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–±—Ä–æ–Ω—é–≤–∞–ª–∏ –∫–Ω–∏–≥—É:</p>
            <hr>
            <h3>üìö {book["title"]}</h3>
            <p><strong>‚úçÔ∏è –ê–≤—Ç–æ—Ä:</strong> {book["author"]}</p>
            <p><strong>üìñ –ñ–∞–Ω—Ä:</strong> {book["category"]}</p>
            <p><strong>üåç –ú–æ–≤–∞:</strong> {book["language"]}</p>
            <p><strong>üìÖ –†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è:</strong> {book["year"]}</p>
            <p><strong>üìù –û–ø–∏—Å:</strong> {book["description"]}</p>
            <hr>
            <p><strong>‚è≥ –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –¥—ñ–π—Å–Ω–µ –¥–æ:</strong> {expires_at}</p>
            <p>–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–±–µ—Ä—ñ—Ç—å –∫–Ω–∏–≥—É –¥–æ —Ü—ñ—î—ó –¥–∞—Ç–∏. –Ø–∫—â–æ –≤–∏ –Ω–µ –≤—Å—Ç–∏–≥–Ω–µ—Ç–µ, –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.</p>
            <br>
            <p>üìö –ì–∞—Ä–Ω–æ–≥–æ —á–∏—Ç–∞–Ω–Ω—è!<br>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body, html=True))


@celery_app.task
def send_reservation_cancelled_email(email: str, book_title: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è"""
    subject = "‚õî –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ"

    body = f"""
    <html>
        <body>
            <h2 style="color: #D32F2F;">‚õî –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ</h2>
            <p>–®–∞–Ω–æ–≤–Ω–∏–π —á–∏—Ç–∞—á—É,</p>
            <p>–ú–∏ —Ö–æ—á–µ–º–æ –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏, —â–æ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –∫–Ω–∏–≥–∏ –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ:</p>
            <hr>
            <h3>üìñ {book_title}</h3>
            <p>üîπ <strong>–°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è:</strong> –°–∫–∞—Å–æ–≤–∞–Ω–æ</p>
            <hr>
            <p>–ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è:</p>
            <ul>
                <li>‚è≥ –í–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –≤—ñ–¥–º—ñ–Ω–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è.</li>
                <li>üìÖ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–∞—Å—É–≤–∞–≤ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∑ —ñ–Ω—à–∏—Ö –ø—Ä–∏—á–∏–Ω.</li>
            </ul>
            <p>–Ø–∫—â–æ –≤–∏ –≤—Å–µ —â–µ –±–∞–∂–∞—î—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—é –∫–Ω–∏–≥—É, –≤–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ –Ω–æ–≤–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥.</p>
            <br>
            <p>üìö –Ø–∫—â–æ —É –≤–∞—Å —î –∑–∞–ø–∏—Ç–∞–Ω–Ω—è ‚Äì –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞—Ä—ñ–≤.</p>
            <br>
            <p>üìñ –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body, html=True))


@celery_app.task
def send_book_checked_out_email(email: str, book_title: str, due_date: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ (–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ 14 –¥–Ω—ñ–≤)"""
    subject = "üìñ –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∫–Ω–∏–≥—É ‚Äì –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤—á–∞—Å–Ω–æ!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">üìñ –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∫–Ω–∏–≥—É!</h2>
            <p>–®–∞–Ω–æ–≤–Ω–∏–π —á–∏—Ç–∞—á—É,</p>
            <p>–í–∏ –∑–∞–±—Ä–∞–ª–∏ –∫–Ω–∏–≥—É –∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏, —ñ —Ç–µ–ø–µ—Ä –≤–æ–Ω–∞ —É –≤–∞—à–æ–º—É —Ä–æ–∑–ø–æ—Ä—è–¥–∂–µ–Ω–Ω—ñ. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–∑–Ω–∞–π–æ–º—Ç–µ—Å—è –∑ –≤–∞–∂–ª–∏–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é:</p>
            <hr>
            <h3>üìö {book_title}</h3>
            <p>üìÖ <strong>–¢–µ—Ä–º—ñ–Ω –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:</strong> {due_date}</p>
            <hr>
            <p>–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å –∫–Ω–∏–≥—É –¥–æ –∑–∞–∑–Ω–∞—á–µ–Ω–æ–≥–æ —Ç–µ—Ä–º—ñ–Ω—É, —â–æ–± —ñ–Ω—à—ñ —á–∏—Ç–∞—á—ñ —Ç–∞–∫–æ–∂ –º–æ–≥–ª–∏ –Ω–µ—é —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è.</p>
            <p>–Ø–∫—â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—ñ–ª—å—à–µ —á–∞—Å—É, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞—Ä—è –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è.</p>
            <br>
            <p>üìö –ë–∞–∂–∞—î–º–æ –≤–∞–º –ø—Ä–∏—î–º–Ω–æ–≥–æ —á–∏—Ç–∞–Ω–Ω—è!</p>
            <br>
            <p>üìñ –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body, html=True))


@celery_app.task
def send_thank_you_email(user_email: str, book: dict):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏"""
    subject = "üìö –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">üìñ –î—è–∫—É—î–º–æ –∑–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏!</h2>
            <p>–í–∞—à–∞ –∫–Ω–∏–≥–∞ —É—Å–ø—ñ—à–Ω–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–∞ –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏. –ú–∏ —Ü—ñ–Ω—É—î–º–æ –≤–∞—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å —ñ —Å–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è, —â–æ –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è –≤—ñ–¥ —á–∏—Ç–∞–Ω–Ω—è.</p>
            <hr>
            <h3>üìö {book["title"]}</h3>
            <p><strong>–ê–≤—Ç–æ—Ä:</strong> {book["author"]}</p>
            <p><strong>–ñ–∞–Ω—Ä:</strong> {book["category"]}</p>
            <p><strong>–ú–æ–≤–∞:</strong> {book["language"]}</p>
            <p><strong>–†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è:</strong> {book["year"]}</p>
            <p><strong>–û–ø–∏—Å:</strong> {book["description"]}</p>
            <hr>
            <p>‚ú® –ú–∏ –∑–∞–≤–∂–¥–∏ —Ä–∞–¥—ñ –±–∞—á–∏—Ç–∏ –≤–∞—Å —É –Ω–∞—à—ñ–π –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ!</p>
            <p>üìñ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–≥–ª—è–Ω—É—Ç–∏ –¥–æ –Ω–∞—Å –∑–∞ –Ω–æ–≤–∏–º–∏ –∫–Ω–∏–∂–∫–∞–º–∏.</p>
            <br>
            <p>üìö –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(user_email, subject, body, html=True))


@celery_app.task
def send_reservation_cancellation_email(user_email: str, book_title: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è"""
    subject = "‚õî –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ"

    body = f"""
    <html>
        <body>
            <h2 style="color: #D32F2F;">‚õî –í–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±—É–ª–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ</h2>
            <p>–®–∞–Ω–æ–≤–Ω–∏–π —á–∏—Ç–∞—á—É,</p>
            <p>–ú–∏ –∑–º—É—à–µ–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏, —â–æ –≤–∞—à–µ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥–∏ –±—É–ª–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–∏ –Ω–µ –∑–∞–±—Ä–∞–ª–∏ —ó—ó –≤—á–∞—Å–Ω–æ.</p>
            <hr>
            <h3>üìñ {book_title}</h3>
            <p>‚è≥ <strong>–¢–µ—Ä–º—ñ–Ω –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è</strong></p>
            <hr>
            <p>–Ø–∫—â–æ –≤–∏ –≤—Å–µ —â–µ –∑–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω—ñ –≤ —Ü—ñ–π –∫–Ω–∏–∑—ñ, –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω—é–≤–∞—Ç–∏ —ó—ó –∑–Ω–æ–≤—É —á–µ—Ä–µ–∑ –Ω–∞—à –∫–∞—Ç–∞–ª–æ–≥.</p>
            <p>–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞—Ä—ñ–≤, —è–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è.</p>
            <br>
            <p>üìö –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(user_email, subject, body, html=True))


@celery_app.task
def send_return_reminder_email(user_email: str, book_title: str, due_date: str):
    """üì© –õ–∏—Å—Ç-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞ 3 –¥–Ω—ñ –¥–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏"""
    subject = "üìÖ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏"

    body = f"""
    <html>
        <body>
            <h2 style="color: #FFA500;">üìÖ –ù–∞–±–ª–∏–∂–∞—î—Ç—å—Å—è —Ç–µ—Ä–º—ñ–Ω –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–Ω–∏–≥–∏!</h2>
            <p>–®–∞–Ω–æ–≤–Ω–∏–π —á–∏—Ç–∞—á—É,</p>
            <p>–ù–∞–≥–∞–¥—É—î–º–æ, —â–æ —Ç–µ—Ä–º—ñ–Ω –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤–∞—à–æ—ó –∫–Ω–∏–≥–∏ —Å–ø–ª–∏–≤–∞—î –∑–æ–≤—Å—ñ–º —Å–∫–æ—Ä–æ.</p>
            <hr>
            <h3>üìñ {book_title}</h3>
            <p>‚è≥ <strong>–¢–µ—Ä–º—ñ–Ω –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:</strong> {due_date}</p>
            <hr>
            <p>–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å –∫–Ω–∏–≥—É –≤—á–∞—Å–Ω–æ, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–Ω—è.</p>
            <p>–Ø–∫—â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–µ–Ω –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π —á–∞—Å, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—É.</p>
            <br>
            <p>üìö –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(user_email, subject, body, html=True))


@celery_app.task
def send_welcome_email(user_email: str, user_name: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    subject = "üéâ –í—ñ—Ç–∞—î–º–æ —É –Ω–∞—à—ñ–π –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">üìö –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏!</h2>
            <p>–®–∞–Ω–æ–≤–Ω–∏–π(–∞) {user_name},</p>
            <p>–ú–∏ —Ä–∞–¥—ñ –≤—ñ—Ç–∞—Ç–∏ –≤–∞—Å —É –Ω–∞—à—ñ–π –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ! –¢—É—Ç –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —à–∏—Ä–æ–∫–∏–π –≤–∏–±—ñ—Ä –∫–Ω–∏–≥ –Ω–∞ –±—É–¥—å-—è–∫–∏–π —Å–º–∞–∫.</p>
            <hr>
            <h3>üìñ –©–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –Ω–∞—à—ñ–π –±—ñ–±–ª—ñ–æ—Ç–µ—Ü—ñ?</h3>
            <ul>
                <li>üìö –•—É–¥–æ–∂–Ω—è —Ç–∞ –Ω–∞—É–∫–æ–≤–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞</li>
                <li>üìò –ö–ª–∞—Å–∏—á–Ω—ñ —Ç–∞ —Å—É—á–∞—Å–Ω—ñ —Ç–≤–æ—Ä–∏</li>
                <li>üîç –†—ñ–¥–∫—ñ—Å–Ω—ñ –∫–Ω–∏–≥–∏ —Ç–∞ –∞—Ä—Ö—ñ–≤–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏</li>
                <li>üìÖ –ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –∫–Ω–∏–≥ –æ–Ω–ª–∞–π–Ω</li>
            </ul>
            <hr>
            <p>‚ú® –ú–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Å–µ—Ä–µ–¥ –Ω–∞—à–∏—Ö –∫–Ω–∏–≥ –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —â–æ—Å—å —Ü—ñ–∫–∞–≤–µ –¥–ª—è —Å–µ–±–µ!</p>
            <p>üåü –ü–æ—á–Ω—ñ—Ç—å —Å–≤–æ—é –ø–æ–¥–æ—Ä–æ–∂ —É —Å–≤—ñ—Ç –∑–Ω–∞–Ω—å –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑ ‚Äì –∑–∞—Ö–æ–¥—å—Ç–µ –Ω–∞ —Å–∞–π—Ç —Ç–∞ –æ–±–∏—Ä–∞–π—Ç–µ –∫–Ω–∏–≥–∏!</p>
            <br>
            <p>üìö –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–ö–æ–º–∞–Ω–¥–∞ –≤–∞—à–æ—ó –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(user_email, subject, body, html=True))


@celery_app.task
def send_user_blocked_email(email: str, first_name: str):
    subject = "üö´ –í–∞—à –∞–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ"
    body = f"""
    <html>
        <body>
            <h2 style="color: #D32F2F;">üö´ –ê–∫–∞—É–Ω—Ç —Ç–∏–º—á–∞—Å–æ–≤–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ</h2>
            <p>–®–∞–Ω–æ–≤–Ω–∏–π {first_name},</p>
            <p>–í–∞—à –∞–∫–∞—É–Ω—Ç –±—É–≤ —Ç–∏–º—á–∞—Å–æ–≤–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π —á–µ—Ä–µ–∑ –æ–¥–Ω—É –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –ø—Ä–∏—á–∏–Ω:</p>
            <ul>
                <li>üìö –í–∏ –º–∞—î—Ç–µ –∫—ñ–ª—å–∫–∞ –∫–Ω–∏–≥ –∑ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏–º —Ç–µ—Ä–º—ñ–Ω–æ–º –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è.</li>
                <li>üîí –ü—ñ–¥–æ–∑—Ä—ñ–ª–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∑ –≤–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç–∞.</li>
            </ul>
            <hr>
            <p>–©–æ–± –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ –¥–æ—Å—Ç—É–ø, –±—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ –∫–Ω–∏–≥–∏ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏.</p>
            <p>–Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –º–∏ –±—É–¥–µ–º–æ —Ä–∞–¥—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏.</p>
            <br>
            <p>üìö –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(email, subject, body, html=True))


@celery_app.task
def send_user_unblocked_email(user_email: str, first_name: str):
    """üì© –õ–∏—Å—Ç –ø—ñ—Å–ª—è —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞—Ä–µ–º"""
    subject = "üîì –í–∞—à –∞–∫–∞—É–Ω—Ç —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ!"

    body = f"""
    <html>
        <body>
            <h2 style="color: #4CAF50;">üîì –î–æ—Å—Ç—É–ø –¥–æ –∞–∫–∞—É–Ω—Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ</h2>
            <p>–®–∞–Ω–æ–≤–Ω–∏–π {first_name},</p>
            <p>–ú–∏ —Ä–∞–¥—ñ –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏, —â–æ –≤–∞—à –∞–∫–∞—É–Ω—Ç –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ <strong>—Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ</strong>.</p>
            <hr>
            <p>–¢–µ–ø–µ—Ä –≤–∏ –∑–Ω–æ–≤—É –º–æ–∂–µ—Ç–µ:</p>
            <ul>
                <li>üìö –ë—Ä–æ–Ω—é–≤–∞—Ç–∏ –∫–Ω–∏–≥–∏</li>
                <li>üìñ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∫–Ω–∏–≥–∏ —É —Ç–∏–º—á–∞—Å–æ–≤–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è</li>
                <li>üïì –ü–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –≤–∞—à–∏—Ö –±—Ä–æ–Ω—é–≤–∞–Ω—å</li>
            </ul>
            <hr>
            <p>–ë—É–¥—å –ª–∞—Å–∫–∞, –¥–æ—Ç—Ä–∏–º—É–π—Ç–µ—Å—è –ø—Ä–∞–≤–∏–ª –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫–æ—é, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è —É –º–∞–π–±—É—Ç–Ω—å–æ–º—É.</p>
            <br>
            <p>üìö –ó –ø–æ–≤–∞–≥–æ—é,<br><strong>–í–∞—à–∞ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞</strong></p>
        </body>
    </html>
    """

    loop = asyncio.get_event_loop()
    loop.create_task(send_email(user_email, subject, body, html=True))


@celery_app.task
def check_and_send_return_reminders():
    print("‚úÖ check_and_send_return_reminders started!")

    try:
        loop = asyncio.get_event_loop()
        if loop.is_closed():
            raise RuntimeError
    except RuntimeError:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

    loop.run_until_complete(_check_and_send_return_reminders())


async def _check_and_send_return_reminders():
    async with SessionLocal() as db:
        now = datetime.now()
        reminder_date = now + timedelta(days=3)

        result = await db.execute(
            select(Reservation)
            .options(joinedload(Reservation.book), joinedload(Reservation.user))
            .where(
                Reservation.expires_at.between(
                    reminder_date - timedelta(seconds=30),
                    reminder_date + timedelta(seconds=30),
                ),
                Reservation.status == ReservationStatus.ACTIVE,
            ),
        )
        reservations = result.scalars().all()
        print(f"üîî –ó–Ω–∞–π–¥–µ–Ω–æ {len(reservations)} —Ä–µ–∑–µ—Ä–≤–∞—Ü—ñ–π –¥–ª—è –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è")

        for reservation in reservations:
            book = reservation.book
            user = reservation.user

            send_return_reminder_email.delay(
                user.email,
                book.title,
                reservation.expires_at.strftime("%Y-%m-%d"),
            )

        await db.commit()


@celery_app.task
def check_and_cleanup_reservations():
    print("‚úÖcheck_and_cleanup_reservations started!")

    try:
        loop = asyncio.get_event_loop()
        if loop.is_closed():
            raise RuntimeError
    except RuntimeError:
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

    loop.run_until_complete(_check_and_cleanup_reservations())


async def _check_and_cleanup_reservations():
    async with SessionLocal() as db:
        now = datetime.now()

        # 1. –ù–µ –∑–∞–±—Ä–∞–ª–∏ –∫–Ω–∏–≥—É (CONFIRMED ‚Üí CANCELLED)
        result: Result = await db.execute(
            select(Reservation)
            .options(joinedload(Reservation.book), joinedload(Reservation.user))
            .where(
                Reservation.expires_at < now,
                Reservation.status == ReservationStatus.CONFIRMED,
            ),
        )

        to_cancel: List[Reservation] = result.scalars().all()
        print(f"[CLEANUP] üîî –ó–Ω–∞–π–¥–µ–Ω–æ {len(to_cancel)} —Ä–µ–∑–µ—Ä–≤–∞—Ü—ñ–π –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è")

        for r in to_cancel:
            r.status = ReservationStatus.CANCELLED
            r.book.status = BookStatus.AVAILABLE
            await db.flush()
            send_reservation_cancellation_email.delay(r.user.email, r.book.title)

        # 2. –ù–µ –ø–æ–≤–µ—Ä–Ω—É–ª–∏ –∫–Ω–∏–≥—É (ACTIVE ‚Üí EXPIRED, OVERDUE)
        result2: Result = await db.execute(
            select(Reservation)
            .options(joinedload(Reservation.book), joinedload(Reservation.user))
            .where(
                Reservation.expires_at < now,
                Reservation.status == ReservationStatus.ACTIVE,
            ),
        )
        to_expire: List[Reservation] = result2.scalars().all()

        for r in to_expire:
            r.status = ReservationStatus.EXPIRED
            r.book.status = BookStatus.OVERDUE
            await db.flush()
            logger.info(f"[OVERDUE] Book '{r.book.title}' ‚Üí user: {r.user.email}")

        # 3. –ë–ª–æ–∫—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ 2+ OVERDUE
        result3: Result = await db.execute(
            select(User).options(
                joinedload(User.reservations).joinedload(Reservation.book),
            ),
        )
        users: List[User] = result3.unique().scalars().all()

        for user in users:
            count = sum(
                1
                for r in user.reservations
                if r.book and r.book.status == BookStatus.OVERDUE
            )
            if count >= 2 and not user.is_blocked:
                user.is_blocked = True
                await db.flush()
                logger.warning(
                    f"[BLOCKED] {user.email} —á–µ—Ä–µ–∑ {count} –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏—Ö –∫–Ω–∏–≥",
                )
                send_user_blocked_email.delay(user.email, count)

        await db.commit()
