services:
  alembic:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      app:
        condition: service_started
    environment:
      DATABASE_URL: ${DATABASE_URL}
      MAKE_MIGRATIONS: ${MAKE_MIGRATIONS:-false}
      MAKE_MIGRATION_DOWNGRADE: ${MAKE_MIGRATION_DOWNGRADE:-false}
      MIGRATION_DOWNGRADE_TARGET: ${MIGRATION_DOWNGRADE_TARGET:-39dff8215af5}
    command: >
      sh -c "[ "$MAKE_MIGRATIONS" = "true" ] && alembic revision --autogenerate -m 'auto detect changes';
             [ "$MAKE_MIGRATION_DOWNGRADE" = "true" ] && alembic downgrade "$MIGRATION_DOWNGRADE_TARGET";
             [ "$MAKE_MIGRATION_DOWNGRADE" != "true" ] && alembic upgrade head"
    volumes:
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
    networks:
      - app_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    container_name: PostgreSQL
    ports:
      - "5001:5000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL} 
    networks:
      - app_network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: celery_worker
    command: celery -A app.services.celery:celery_app worker --loglevel=info
    environment:
      DATABASE_URL: ${DATABASE_URL}  
      REDIS_URL: ${REDIS_URL}
    depends_on:
      app:
        condition: service_started
    networks:
      - app_network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: celery_beat
    command: celery -A app.services.celery:celery_app beat --loglevel=info
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
    depends_on:
      celery_worker:
        condition: service_started
    volumes:
    - ./celerybeat-schedule:/app/celerybeat-schedule
    networks:
      - app_network

  flower:
      image: mher/flower
      container_name: flower
      restart: always
      ports:
        - "5555:5555"
      environment:
        - CELERY_BROKER_URL=${REDIS_URL}
        - FLOWER_BASIC_AUTH=${FLOWER_BASIC_AUTH}
      depends_on:
        - celery_worker
      networks:
        - app_network

networks:
  app_network:
    driver: bridge
